version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: error-insights-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: error-insights
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - error-insights-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: error-insights-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - error-insights-network

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: error-insights-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - error-insights-network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: error-insights-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - error-insights-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: error-insights-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - error-insights-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile.dev
    container_name: error-insights-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/error-insights?authSource=admin
      ELASTICSEARCH_NODE: http://elasticsearch:9200
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - mongodb
      - elasticsearch
      - redis
      - kafka
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - error-insights-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile.dev
    container_name: error-insights-frontend
    restart: unless-stopped
    ports:
      - "4200:4200"
    environment:
      - API_URL=http://backend:3000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - error-insights-network

volumes:
  mongodb_data:
  elasticsearch_data:
  redis_data:
  kafka_data:

networks:
  error-insights-network:
    driver: bridge
